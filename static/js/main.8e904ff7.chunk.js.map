{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/AccountBalance/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","Coin","props","name","ticker","price","showBalance","balance","action","method","onClick","event","preventDefault","handleCoinBalance","id","Table","table","CoinList","className","handleRefresh","coinData","map","key","Header","header","Img","img","H1","h1","ExchangeHeader","src","logo","Component","Section","section","Button","button","AccountBalance","buttonText","content","amount","handleShowBalance","alt","height","width","handleIncreaseBalance","Div","div","App","React","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","promises","Promise","all","coinPriceData","symbol","parseFloat","quotes","USD","toFixed","useEffect","length","newcoinData","i","updateCoinData","index","valueChangeKey","buyOrSell","newBalance","newCoinData","values","newValues","newBalanceVisibility","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e904ff7.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n\nconst Td = styled.td `\n    border: 1px solid #ccc;\n    width: 25vh;\n`;\n\nexport default function Coin(props) {\n    \n  const handleClickBuy = (event) =>{\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n\n        props.handleCoinBalance(props.id,true);\n  }\n\n  const handleClickSell = (event) =>{\n    //Prevent the default action of submitting the form\n    event.preventDefault();\n\n    props.handleCoinBalance(props.id,false);\n}\n    \n  return(\n      <tr>\n        <Td>{props.name}</Td>\n        <Td>{props.ticker}</Td>\n        <Td>${props.price}</Td>\n        {props.showBalance ? <Td>{props.balance}</Td> : <Td>***</Td> }\n        <Td>\n          <form action = \"#\" method = \"POST\">\n            <button onClick={handleClickBuy}>Buy</button>\n            <button onClick={handleClickSell}>Sell</button>\n          </form>\n        </Td>\n      </tr>\n  );\n    \n}\n\nCoin.propTypes = {\n    name: PropTypes.string.isRequired,\n    ticker: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n}\n","import React from 'react';\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n    margin: 50px auto 50px auto; \n    display: inline-block;\n    font-size: 1.4rem;\n`;\n\nexport default function CoinList(props) {\n\n  const handleClick = (event) =>{\n    //Prevent the default action of submitting the form\n    event.preventDefault();\n\n    props.handleRefresh();\n  }\n\n  return (\n    <Table className=\"coin-table\">\n    <thead>\n      <tr>\n        <th>NAME</th>\n        <th>TICKER</th>\n        <th>PRICE \n            <button onClick={handleClick}> Refresh </button>\n        </th>\n        <th>BALANCE</th> \n        <th>ACTION</th>\n      </tr> \n    </thead>\n    <tbody>\n    {\n      props.coinData.map( ({key,name,ticker,price,balance}) => \n      <Coin \n            key= {key} \n            id={key}\n            name = {name} \n            ticker = {ticker} \n            price={price}\n            balance = {balance}\n            showBalance = {props.showBalance}\n            handleRefresh = {props.handleRefresh}\n            handleCoinBalance = {props.handleCoinBalance}/>\n      )\n    }\n    </tbody>\n    </Table>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport logo from '../../logo.svg';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    background-color: #282c34;\n    min-height: 20vh;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    color: white;\n`;\n\nconst Img = styled.img`\nheight: 8rem;\npointer-events: none;\n@media (prefers-reduced-motion: no-preference) {\n  \n      animation: App-logo-spin infinite 20s linear;\n    \n  }\n@keyframes App-logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\n\nconst H1 = styled.h1`\nfont-size: 4rem;\n`;\n\nexport default class ExchangeHeader extends Component {\n    render() {\n        return (\n        \n            <Header>\n                <Img src={logo}/>\n                <H1>\n                Coin Exchange \n                </H1>\n            </Header>\n            \n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n\nconst Section = styled.section`\n    background-color: rgb(42, 76, 109);\n    min-height: 20vh;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: space-around;\n    flex: 1;\n    margin: 5;\n    color: white;\n    font-size: 1.5rem;\n`;\n\nconst Button = styled.button`\n    border: 1px solid #000;\n    background: grey;\n    font-size: 1.5rem;\n    text-align: center;\n    padding: 0rem 1rem 0rem 1rem;\n\n`;\n\n\n\n\n\nexport default function AccountBalance (props) {\n    \n    const handleClick = (event) => {\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n        props.handleShowBalance(!props.showBalance);\n    };\n\n    const handleHeliClick = (event) => {\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n        props.handleIncreaseBalance();\n    };\n\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\n    let content = null;\n    if (props.showBalance){\n        content = <>Balance: ${props.amount}</>\n    }\n    else{\n        content = <>Balance: ***</>\n    }\n    return (\n        \n        <Section>\n            <h3>\n                <Button onClick={handleClick}> {buttonText}</Button>\n                {content}\n            </h3>\n            <img src=\"https://external-content.duckduckgo.com/iu/?u=https%3A%2F%2Fwebstockreview.net%2Fimages%2Fhelicopter-clipart-yellow-helicopter-9.png&f=1&nofb=1\" \n            alt=\"my heli\" \n            height = {50}\n            width = {50}\n            onClick={handleHeliClick}/>\n        </Section>\n        \n        \n    );\n}\n\n\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired\n}","import CoinList from './components/CoinList/CoinList';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(42, 76, 109);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 5;\nfunction App(props){\n  const [balance, setBalance] = React.useState(10000);\n  const [showBalance, setShowBalance] = React.useState(true);\n  const [coinData, setCoinData] = React.useState([]);\n\n  const componentDidMount = async () =>{\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\n    const coinIds = response.data.slice(0,COIN_COUNT).map( coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response){\n      const coin = response.data;\n      return{\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: parseFloat(coin.quotes.USD.price.toFixed(4))\n      };\n    });\n\n    //retreive prices\n    setCoinData(coinPriceData);\n  }\n\n\n  useEffect(function() {\n    if (coinData.length === 0 ){\n      componentDidMount();\n    }\n    else{\n      //componenet did update \n    }\n  });\n\n\n  const handleRefresh = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\n    const coinIds = response.data.slice(0,COIN_COUNT).map( coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const newcoinData = await Promise.all(promises);\n    let i = 0;\n    //console.log(newcoinData)\n    const updateCoinData = newcoinData.map(function(response){\n      const coin = response.data;\n      const index = i;\n      i++;\n      return{\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: coinData[index].balance,\n        price: parseFloat(coin.quotes.USD.price.toFixed(4))\n      };\n    });\n\n    //retreive prices\n    setCoinData(updateCoinData);\n\n\n    /*const coin = await axios.get('https://api.coinpaprika.com/v1/tickers/' + valueChangeKey);\n    const newCoinData= coinData.map(function(values){\n      let newValues = {...values};\n      if ( valueChangeKey === values.key) {\n        newValues.price = parseFloat(coin.data.quotes.USD.price.toFixed(4));\n        console.log(newValues.price);\n      }\n      return newValues;\n    \n\n    });\n    setCoinData(newCoinData);*/\n  };\n\n  const handleShowBalance = (newBalanceVisibility) => {\n    setShowBalance(newBalanceVisibility);\n  };\n\n  const handleIncreaseBalance = () => {\n    const newBalance = balance + 1200\n    setBalance(newBalance);\n  };\n\n  const handleCoinBalance = async (valueChangeKey,buyOrSell) => {\n    \n    let newBalance = balance;\n    const newCoinData= coinData.map(function(values){\n      let newValues = {...values};\n      if ( valueChangeKey === values.key) {\n        if(buyOrSell){\n        newValues.balance = newValues.balance + 1000;\n        newBalance = newBalance - 1000;\n        //console.log(newValues.price);\n        //console.log(newValues.balance);\n        }\n        else{\n        newValues.balance = newValues.balance - 1000;\n        newBalance = newBalance + 1000;\n        //console.log(newValues.price);\n        //console.log(newValues.balance);\n        }\n        }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n    setBalance(newBalance);\n  };\n\n  return (\n  <Div className=\"App\">\n    <ExchangeHeader/>\n    <AccountBalance amount = {balance} \n    showBalance={showBalance} \n    handleShowBalance={handleShowBalance} \n    handleIncreaseBalance={handleIncreaseBalance}/>\n    <CoinList \n    coinData = {coinData} \n    showBalance = {showBalance}\n    handleRefresh={handleRefresh}\n    handleCoinBalance={handleCoinBalance}/>\n  </Div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}