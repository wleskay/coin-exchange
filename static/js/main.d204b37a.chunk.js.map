{"version":3,"sources":["components/Coin/Coin.jsx","components/CoinList/CoinList.jsx","logo.svg","components/ExchangeHeader/ExchangeHeader.jsx","components/AccountBalance/AccountBalance.jsx","App.js","reportWebVitals.js","index.js"],"names":["Td","styled","td","TdControls","TdName","Button","button","Coin","props","name","ticker","price","showBalance","balance","action","method","className","onClick","event","preventDefault","handleCoinBalance","id","Table","table","CoinList","coinData","map","key","handleRefresh","Header","header","Img","img","H1","h1","ExchangeHeader","src","logo","Component","Section","section","Balance","div","BalanceToggleButton","formatter","Intl","NumberFormat","style","currency","AccountBalance","buttonText","content","format","amount","buttonClass","handleShowBalance","handleIncreaseBalance","Div","App","React","useState","setBalance","setShowBalance","setCoinData","componentDidMount","a","axios","get","response","coinIds","data","slice","coin","promises","Promise","all","coinPriceData","symbol","parseFloat","quotes","USD","toFixed","useEffect","length","newcoinData","i","updateCoinData","index","valueChangeKey","buyOrSell","balanceChange","newBalance","newCoinData","values","newValues","newBalanceVisibility","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d204b37a.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n\nconst Td = styled.td `\n    border: 1px solid #ccc;\n    width: 16vw;\n`;\n\nconst TdControls = styled(Td)`\n  width: 34vw; \n`;\n\nconst TdName = styled(Td)`\n  width: 24vw\n`;\n\nconst Button = styled.button`\n  font-size: 11px;\n  width: 80px;\n  height: 30px;\n  margin: 3px 3px 3px;\n  \n`;\n\nexport default function Coin(props) {\n    \n  const handleClickBuy = (event) =>{\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n\n        props.handleCoinBalance(props.id,true);\n  }\n\n  const handleClickSell = (event) =>{\n    //Prevent the default action of submitting the form\n    event.preventDefault();\n\n    props.handleCoinBalance(props.id,false);\n}\n    \n  return(\n      <tr>\n        <TdName>{props.name}</TdName>\n        <Td>{props.ticker}</Td>\n        <Td>${props.price}</Td>\n        <Td>{props.showBalance ? props.balance : '***' } </Td>\n        <TdControls>\n          <form action = \"#\" method = \"POST\">\n            <Button className = \"btn btn-success\" onClick={handleClickBuy}>Buy</Button>\n            <Button className = \"btn btn-danger\" onClick={handleClickSell}>Sell</Button>\n          </form>\n        </TdControls>\n      </tr>\n  );\n    \n}\n\nCoin.propTypes = {\n    name: PropTypes.string.isRequired,\n    ticker: PropTypes.string.isRequired,\n    price: PropTypes.number.isRequired\n}\n","import React from 'react';\nimport Coin from '../Coin/Coin';\nimport styled from 'styled-components';\n\nconst Table = styled.table`\n    color: #ccc;\n    font-size: 1rem;\n`;\n\n\nexport default function CoinList(props) {\n\n  return (\n    <Table className=\"table table-bordered  \">\n    <thead>\n      <tr>\n        <th>NAME</th>\n        <th>TICKER</th>\n        <th>PRICE </th>\n        <th>BALANCE</th> \n        <th>ACTION</th>\n      </tr> \n    </thead>\n    <tbody>\n    {\n      props.coinData.map( ({key,name,ticker,price,balance}) => \n      <Coin \n            key= {key} \n            id={key}\n            name = {name} \n            ticker = {ticker} \n            price={price}\n            balance = {balance}\n            showBalance = {props.showBalance}\n            handleRefresh = {props.handleRefresh}\n            handleCoinBalance = {props.handleCoinBalance}/>\n      )\n    }\n    </tbody>\n    </Table>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\nimport logo from '../../logo.svg';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    background-color: #282c34;\n    min-height: 10vh;\n    width: 100%;\n    display: flex;\n    flex-direction: row;\n    align-items: center;\n    justify-content: flex-start;\n    color: white;\n`;\n\nconst Img = styled.img`\nheight: 8rem;\npointer-events: none;\n@media (prefers-reduced-motion: no-preference) {\n  \n      animation: App-logo-spin infinite 20s linear;\n    \n  }\n@keyframes App-logo-spin {\n    from {\n      transform: rotate(0deg);\n    }\n    to {\n      transform: rotate(360deg);\n    }\n  }\n`;\n\n\nconst H1 = styled.h1`\nfont-size: 3rem;\nline-height: 8rem;\nfont-weight: bold;\nmin-width: 300px;\n`;\n\nexport default class ExchangeHeader extends Component {\n    render() {\n        return (\n        \n            <Header>\n                <Img src={logo}/>\n                <H1>\n                Coin Exchange \n                </H1>\n            </Header>\n            \n        )\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\n\nconst Section = styled.section`\n    font-size: 2rem;\n    text-align: center;\n    margin-bottom: 2rem;\n    line-height: 3rem; \n    display: inline-block;\n`;\n\nconst Balance = styled.div`\n    min-width: 250px;\n    margin: 0.5rem 0 0 2.5rem;\n    font-size: 1.5rem;\n    vertical-align: middle;\n    text-align: left;\n`;\n\nconst Button = styled.button`\n    margin: 0 8px;\n\n`;\nconst BalanceToggleButton = styled(Button)`\n    width: 150px;\n\n`;\n\nvar formatter = Intl.NumberFormat('en-US',{\n    style: 'currency',\n    currency: 'USD'\n});\n\n\n\nexport default function AccountBalance (props) {\n    \n    const handleClick = (event) => {\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n        props.handleShowBalance(!props.showBalance);\n    };\n\n    const handleHeliClick = (event) => {\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n        props.handleIncreaseBalance();\n    };\n\n    const handleRefresh= (event) =>{\n        //Prevent the default action of submitting the form\n        event.preventDefault();\n    \n        props.handleRefresh();\n      }\n\n    const buttonText = props.showBalance ? 'Hide Balance' : 'Show Balance';\n    let content = '\\u00A0';\n    if(props.showBalance){\n        content = <>{formatter.format(props.amount)}</>\n    }\n    const buttonClass = 'btn ' + (props.showBalance ? 'btn-warning': 'btn-info')\n    return (\n        <>\n        <Balance>{content}</Balance>\n        <Section>\n            <BalanceToggleButton onClick={handleClick}\n            className = {buttonClass}> \n            {buttonText}</BalanceToggleButton>\n            <Button className = \"btn btn-secondary\" onClick={handleRefresh}> Refresh </Button>\n            <Button className = \"bnt btn-success\" \n                onClick={handleHeliClick} >\n                <i className=\"fas fa-helicopter\"></i></Button>\n        </Section>\n        </>\n        \n    );\n}\n\n\n\nAccountBalance.propTypes = {\n    amount: PropTypes.number.isRequired\n}","import CoinList from './components/CoinList/CoinList';\nimport ExchangeHeader from './components/ExchangeHeader/ExchangeHeader';\nimport AccountBalance from './components/AccountBalance/AccountBalance';\nimport React, {useEffect} from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootswatch/dist/flatly/bootstrap.min.css';\nimport '@fortawesome/fontawesome-free/js/all';\n\n\nconst Div = styled.div`\n  text-align: center;\n  background-color: rgb(42, 76, 109);\n  color: #cccccc;\n`;\n\nconst COIN_COUNT = 10;\nfunction App(props){\n  const [balance, setBalance] = React.useState(10000);\n  const [showBalance, setShowBalance] = React.useState(false);\n  const [coinData, setCoinData] = React.useState([]);\n\n  const componentDidMount = async () =>{\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\n    const coinIds = response.data.slice(0,COIN_COUNT).map( coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const coinData = await Promise.all(promises);\n    const coinPriceData = coinData.map(function(response){\n      const coin = response.data;\n      return{\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: 0,\n        price: parseFloat(coin.quotes.USD.price.toFixed(4))\n      };\n    });\n\n    //retreive prices\n    setCoinData(coinPriceData);\n  }\n\n\n  useEffect(function() {\n    if (coinData.length === 0 ){\n      componentDidMount();\n    }\n    else{\n      //componenet did update \n    }\n  });\n\n\n  const handleRefresh = async () => {\n    const response = await axios.get('https://api.coinpaprika.com/v1/coins')\n    const coinIds = response.data.slice(0,COIN_COUNT).map( coin => coin.id);\n    const tickerUrl = 'https://api.coinpaprika.com/v1/tickers/';\n    const promises = coinIds.map(id => axios.get(tickerUrl + id));\n    const newcoinData = await Promise.all(promises);\n    let i = 0;\n    //console.log(newcoinData)\n    const updateCoinData = newcoinData.map(function(response){\n      const coin = response.data;\n      const index = i;\n      i++;\n      return{\n        key: coin.id,\n        name: coin.name,\n        ticker: coin.symbol,\n        balance: coinData[index].balance,\n        price: parseFloat(coin.quotes.USD.price.toFixed(4))\n      };\n    });\n\n    //retreive prices\n    setCoinData(updateCoinData);\n\n\n    /*const coin = await axios.get('https://api.coinpaprika.com/v1/tickers/' + valueChangeKey);\n    const newCoinData= coinData.map(function(values){\n      let newValues = {...values};\n      if ( valueChangeKey === values.key) {\n        newValues.price = parseFloat(coin.data.quotes.USD.price.toFixed(4));\n        console.log(newValues.price);\n      }\n      return newValues;\n    \n\n    });\n    setCoinData(newCoinData);*/\n  };\n\n  const handleShowBalance = (newBalanceVisibility) => {\n    setShowBalance(newBalanceVisibility);\n  };\n\n  const handleIncreaseBalance = () => {\n    const newBalance = balance + 1200\n    setBalance(newBalance);\n  };\n\n  const handleCoinBalance = async (valueChangeKey,buyOrSell) => {\n    var balanceChange = buyOrSell ? 1:-1;\n    let newBalance = balance;\n    const newCoinData= coinData.map(function(values){\n      let newValues = {...values};\n      if ( valueChangeKey === values.key) {\n        newValues.balance = newValues.balance + balanceChange;\n        newBalance = newBalance - (newValues.price * balanceChange);\n        //console.log(newValues.price);\n        //console.log(newValues.balance);\n        }\n      return newValues;\n    });\n    setCoinData(newCoinData);\n    setBalance(newBalance);\n  };\n\n  return (\n  <Div className=\"App\">\n    <ExchangeHeader/>\n    <AccountBalance amount = {balance} \n    showBalance={showBalance} \n    handleShowBalance={handleShowBalance} \n    handleIncreaseBalance={handleIncreaseBalance}\n    handleRefresh={handleRefresh}/>\n    <CoinList \n    coinData = {coinData} \n    showBalance = {showBalance}\n    handleCoinBalance={handleCoinBalance}/>\n  </Div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}